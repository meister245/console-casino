const stageBet="stage-bet",stageSpin="stage-spin",stageWait="stage-wait",stageResults="stage-results",rouletteRedNumbers=[1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36],rouletteBlackNumbers=[2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35];class ConsoleBot{constructor(){this.tasks={}}start(){throw new Error("abstract method")}stop(t){let e=this.getTask(t);e.active=!1,this.tasks[t]=e,console.log("stopped","taskID",t)}createTask(t,e,a,s){if(t in this.tasks)throw new Error("existing task ID: "+t);this.tasks[t]={active:!0,createTime:Math.floor(Date.now()/1e3),game:e,bagSize:s,strategy:a,results:{}},console.log("created","taskID",t)}getTask(t){if(t in this.tasks)return this.tasks[t];throw new Error("invalid taskID: "+t)}getDriver(t){if("playtech"===t)return new Playtech;throw new Error("driver not found: "+t)}generateTaskID(){return Math.random().toString(36).substr(2,9)}updateTaskResults(t,e={}){let a=this.getTask(t);a.results=e,this.tasks[t]=a}getOptions(t){t=t||{};let e={dryRun:!1,chipSize:.2};for(let a in e)t.hasOwnProperty(a)&&(e[a]=t[a]);return e}getRunningTime(t){let e=Math.floor(Date.now()/1e3)-t;return Math.round(e/60/60).toFixed(1)+" hours"}sleep(t){return new Promise(e=>setTimeout(e,t))}}class RouletteBot extends ConsoleBot{constructor(t){super(),this.driver=this.getDriver(t)}async start(t,e,a){if(!(a=await this.getOptions(a)).dryRun&&e>await this.driver.getBalance())throw new Error("balance too low");let s=await this.generateTaskID(),r=await this.getStrategy(this.driver,s,t,e,a);for(await this.createTask(s,"roulette",t,Object.assign({},r.results));this.getTask(s).active;)try{await r.runStrategy(),await this.updateTaskResults(s,Object.assign({},r.results)),await this.sleep(1500)}catch(t){await this.stop(s),console.log(t)}}getStrategy(t,e,a,s,r){if("progressive-red-black"===a)return new ProgressiveRedBlack(t,e,s,r);throw new Error("strategy not found: "+a)}}class DriverCommon{getBalance(){throw new Error("abstract method")}getBetAmount(){throw new Error("abstract method")}getDealerMessage(){throw new Error("abstract method")}getDealerName(){throw new Error("abstract method")}getExtendedHistory(){throw new Error("abstract method")}getLastNumber(){throw new Error("abstract method")}getLastNumbers(){throw new Error("abstract method")}getWinAmount(){throw new Error("abstract method")}setBet(){throw new Error("abstract method")}setBetDouble(){throw new Error("abstract method")}setBetUndo(){throw new Error("abstract method")}setChipSize(){throw new Error("abstract method")}viewStatistics(){throw new Error("abstract method")}viewExtendedHistory(){throw new Error("abstract method")}getElementByAttribute(t,e,a){if((a=a||document.body).hasAttribute(t)&&a.getAttribute(t)===e)return a;let s,r=a.children;for(let a=r.length;a--;)if(s=this.getElementByAttribute(t,e,r[a]),s)return s;return null}simulatedClick(t,e){let a=t.ownerDocument.createEvent("MouseEvents"),s=e||{},r={type:"click",canBubble:!0,cancelable:!0,view:t.ownerDocument.defaultView,detail:1,screenX:0,screenY:0,clientX:0,clientY:0,ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1,button:0,relatedTarget:null};for(let t in s)s.hasOwnProperty(t)&&(r[t]=s[t]);a.initMouseEvent(r.type,r.canBubble,r.cancelable,r.view,r.detail,r.screenX,r.screenY,r.clientX,r.clientY,r.ctrlKey,r.altKey,r.shiftKey,r.metaKey,r.button,r.relatedTarget),t.dispatchEvent(a)}}class Playtech extends DriverCommon{constructor(){super(),this.dataLocatorAttrName="data-automation-locator",this.rouletteBetMapping={low:"betPlace.spots50x50-1to18",even:"betPlace.spots50x50-even",red:"betPlace.spots50x50-red",black:"betPlace.spots50x50-black",odd:"betPlace.spots50x50-odd",high:"betPlace.spots50x50-19to36",columnTop:"betPlace.column-3",columnMiddle:"betPlace.column-2",columnBottom:"betPlace.column-1",firstDozen:"betPlace.dozen-1st12",secondDozen:"betPlace.dozen-2nd12",thirdDozen:"betPlace.dozen-3rd12"},this.chipMapping={.1:"chip_rate-10",.25:"chip_rate-25",.5:"chip_rate-50",1:"chip_rate-100",5:"chip_rate-500",10:"chip_rate-1000",25:"chip_rate-2500",100:"chip_rate-10000",500:"chip_rate-50000",1e3:"chip_rate-100000"}}getBalance(){let t=this.getElementByAttribute(this.dataLocatorAttrName,"footer.balance").textContent;return parseFloat(t.match(/[0-9]+(?:\.[0-9]+)*/g)[0])}getBetAmount(){let t=this.getElementByAttribute(this.dataLocatorAttrName,"footer.betAmount").textContent;return parseFloat(t.match(/[0-9]+(?:\.[0-9]+)*/g)[0])}getDealerMessage(){return document.getElementsByClassName("dealer-message-text")[0].textContent}getDealerName(){return document.getElementsByClassName("header__dealer-name")[0].textContent}getExtendedHistory(){let t=[],e=document.getElementsByClassName("roulette-history-items")[0].innerText.split("\n");for(let a in e)t.push(parseInt(e[a]));return t}getLastNumber(){return parseInt(this.getElementByAttribute(this.dataLocatorAttrName,"field.lastHistoryItem").textContent)}getLastNumbers(){let t=[],e=document.getElementsByClassName("roulette-history-line")[0].innerText.split("\n");for(let a in e)t.push(parseInt(e[a]));return t}getWinAmount(){let t=this.getElementByAttribute(this.dataLocatorAttrName,"footer.winAmount");return parseFloat(t.textContent.match(/[0-9]+(?:\.[0-9]+)*/g)[0])}setBet(t){this.simulatedClick(this.getElementByAttribute(this.dataLocatorAttrName,this.rouletteBetMapping[t]))}setBetDouble(){this.simulatedClick(document.getElementsByClassName("action-button_double")[0])}setBetUndo(){this.simulatedClick(document.getElementsByClassName("action-button_undo")[0])}setChipSize(t){this.simulatedClick(document.getElementsByClassName(this.chipMapping[t])[0])}viewExtendedHistory(){this.simulatedClick(this.getElementByAttribute(this.dataLocatorAttrName,"button.extenededHistory"))}viewStatistics(){this.simulatedClick(this.getElementByAttribute(this.dataLocatorAttrName,"button.statistic"))}}class StrategyCommon{runStrategy(){throw new Error("abstract method")}runStageSpin(){throw new Error("abstract method")}runStageBet(){throw new Error("abstract method")}runStageWait(){throw new Error("abstract method")}runStageResult(){throw new Error("abstract method")}}class ProgressiveRedBlack extends StrategyCommon{constructor(t,e,a,s){super(),this.driver=t,this.taskID=e,this.options=s,this.results={gameWin:0,gameLost:0,profit:0},this.gameState={bet:{},betMultiplier:1,bagSize:a.valueOf(),bagSizeCurrent:a.valueOf(),stage:stageSpin}}runStrategy(){let t=this.driver.getLastNumber(),e=this.driver.getDealerMessage().toLowerCase();this.gameState.stage===stageSpin?this.runStageSpin(e):this.gameState.stage===stageBet?this.runStageBet(e,t):this.gameState.stage===stageWait?this.runStageWait(e):this.gameState.stage===stageResults&&this.runStageResult(e,t)}runStageSpin(t){"wait for the next round"===t&&(console.log(this.taskID,"stage","spin"),this.gameState.stage=stageBet)}runStageBet(t,e){let a=null,s=null,r=[this.taskID,"stage","bet"],i=this.gameState.betMultiplier*this.options.chipSize;if("place your bets"===t||"last bets"===t){if(rouletteRedNumbers.includes(e)?(a="red",s=this.driver.rouletteBetMapping.red):rouletteBlackNumbers.includes(e)&&(a="black",s=this.driver.rouletteBetMapping.black),r.push("lastNumber",e),null===a)this.gameState.bet={null:0};else{if(this.gameState.bagSizeCurrent<i)throw new Error("out of money");if(0===Object.keys(this.gameState.bet).length){for(let t=1;t<=this.gameState.betMultiplier;t++)this.options.dryRun||(this.driver.setChipSize(this.options.chipSize),this.driver.setBet(s)),this.gameState.bagSizeCurrent-=this.options.chipSize;this.gameState.bet[a]=i,r.push("bet",a,i.toFixed(2))}}this.gameState.stage=stageWait,console.log(r.join(" "))}}runStageWait(t){"wait for the next round"===t&&(console.log(this.taskID,"stage","wait"),this.gameState.stage=stageResults)}runStageResult(t,e){let a=null,s=[this.taskID,"stage","result"];"place your bets"!==t&&"last bets"!==t||(rouletteBlackNumbers.includes(e)?a="black":rouletteRedNumbers.includes(e)&&(a="red"),this.gameState.bet.hasOwnProperty("null")?(s.push("N/A"),this.gameState.bet={}):this.gameState.bet.hasOwnProperty(a)?(s.push("win"),this.gameState.bagSizeCurrent+=2*this.gameState.bet[a],this.gameState.bagSizeCurrent>this.gameState.bagSize&&(this.results.profit+=this.gameState.bagSizeCurrent-this.gameState.bagSize,this.gameState.bagSizeCurrent=this.gameState.bagSize.valueOf(),this.gameState.betMultiplier=1),this.results.gameWin+=1,this.gameState.bet={},this.gameState.betMultiplier-=1===this.gameState.betMultiplier?0:1):Object.keys(this.gameState.bet).length>0&&(s.push("lose"),this.results.gameLost+=1,this.gameState.bet={},this.gameState.betMultiplier+=1),s.push("bagsize",this.gameState.bagSizeCurrent.toFixed(2)),s.push("profit",this.results.profit.toFixed(2)),this.gameState.stage=stageBet,console.log(s.join(" ")))}}