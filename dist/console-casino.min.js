class ConsoleCasino{constructor(){this.roulette=new RouletteBot}}const serverPort=8080,serverHostname="localhost",serverUrl="http://localhost:8080",gameState={stageBet:"stage-bet",stageSpin:"stage-spin",stageWait:"stage-wait",stageResults:"stage-results"},rouletteNumbers={red:[1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36],black:[2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35],low:[...Array(18).keys()].map((e=>e+1)),high:[...Array(18).keys()].map((e=>e+19)),odd:[...Array(18).keys()].map((e=>2*(e+1)-1)),even:[...Array(18).keys()].map((e=>2*(e+1))),dozenFirst:[...Array(12).keys()].map((e=>e+1)),dozenSecond:[...Array(12).keys()].map((e=>e+13)),dozenThird:[...Array(12).keys()].map((e=>e+25)),columnTop:[...Array(12).keys()].map((e=>3*(e+1))),columnMiddle:[...Array(12).keys()].map((e=>3*(e+1)-1)),columnBottom:[...Array(12).keys()].map((e=>3*(e+1)-2))};class BetManager{constructor(e){this.driver=e}async getServerState(){const e=this.driver.getTableName().replace(/\s/,"-").toLowerCase();return fetch(`${serverUrl}/state/?tableName=${e}`).then((e=>e.json())).catch((e=>console.error(e)))}async betRequest(e){const t=this.driver.getTableName();return fetch(`${serverUrl}/bet/?tableName=${t}`,{method:"POST",mode:"cors",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>e.json())).catch((e=>console.error(e)))}async betInit(e,t){return await this.betRequest({action:"init",strategyName:e,tableName:t})}async betUpdate(e,t){return await this.betRequest({action:"update",betSize:e,tableName:t})}async betSuspend(e,t,s){return await this.betRequest({action:"suspend",betSize:e,betStrategy:t,tableName:s})}async betReset(e,t,s){if(!["win","lose","abort"].includes(e))throw new Error("invalid result");return await this.betRequest({action:"reset",tableName:s,result:e,strategy:t?.strategy,multiplier:t?.progressionCount})}}const lostGameUrl="https://www.scienceabc.com/wp-content/uploads/ext-www.scienceabc.com/wp-content/uploads/2019/06/bankruptcy-meme.jpg-.jpg",messages={waitForNextRound:"wait for the next round",placeYourBets:"place your bets",lastBets:"last bets"};class RouletteBetManager extends BetManager{constructor(e,t,s){super(e),this.config=t,this.strategies=s,this.lastLogMessage=null,this.state={gameCount:0,pendingGame:null,gameStage:gameState.stageSpin}}async start(){const e=this.driver.getModalMessage().toLowerCase();if(e&&e.match(/(inactive|disconnected|restart|unavailable)/g))return this.state.pendingGame&&await this.reportResult("abort",this.state.pendingGame),void window.location.reload();if(e&&e.match(/table.will.be.closed/g))return void(this.state.pendingGame&&await this.reportResult("abort",this.state.pendingGame));const t=this.driver.getDealerMessage().toLowerCase();switch(this.state.gameStage){case gameState.stageSpin:this.runStageSpin(t);break;case gameState.stageBet:await this.runStageBet(t);break;case gameState.stageWait:this.runStageWait(t);break;case gameState.stageResults:await this.runStageResult(t)}}runStageSpin(e){this.logMessage("waiting for next spin"),e===messages.waitForNextRound&&(this.state.gameStage=gameState.stageBet)}async runStageBet(e){if(this.logMessage("waiting to be able to place bets"),[messages.placeYourBets,messages.lastBets].includes(e)){if(null===this.state.pendingGame){const e=this.driver.getNumberHistory(),{suspended:t,betStrategy:s}=await this.getServerState();for(const a in this.strategies){const i=this.strategies[a];let n=!1,o=!1,r=!1;i.trigger.parent&&i.trigger.parent.includes(s)&&(r=!0),this.isPatternMatching(i.trigger.pattern,e)&&(n=!0),this.isPercentageMatching(i.trigger.distribution,e)&&(o=!0);if(n&&o&&t===r){await this.registerBet(a,i);break}}}else this.logMessage(`continue betting - ${this.state.pendingGame.strategy}`),await this.submitBets();this.state.gameStage=gameState.stageWait}}async registerBet(e,t){this.logMessage(`strategy matched - ${e}`);const s=this.driver.getTableName(),{success:a,serverState:i}=await this.betInit(e,s);a?(this.logMessage("server accepted bet"),this.setupGameState(t,i),await this.submitBets()):this.logMessage("server refused bet")}runStageWait(e){this.logMessage("waiting for next round");e===(this.config.dryRun||null===this.state.pendingGame?messages.waitForNextRound:"")&&(this.state.pendingGame?this.state.gameStage=gameState.stageResults:this.state.gameStage=gameState.stageBet)}async runStageResult(e){if(this.logMessage("waiting for result"),[messages.placeYourBets,messages.lastBets].includes(e)){this.logMessage("processing results");const e=this.driver.getLastNumber();if(this.state.pendingGame){const t=this.driver.getTableName(),s=this.getWinTypes(e),a=this.strategies[this.state.pendingGame.strategy],i=0!==this.state.pendingGame.suspendLossLimit&&this.state.pendingGame.progressionCount===this.state.pendingGame.suspendLossLimit,n=0!==this.state.pendingGame.stopLossLimit&&this.state.pendingGame.progressionCount===this.state.pendingGame.stopLosslimit;let o=!1;if(a.bets.forEach((e=>{o=o||s.includes(e)})),o){const{success:e}=await this.betReset("win",this.state.pendingGame,t);e&&this.logMessage("registered win, reset server state"),this.state.gameCount+=1,this.state.pendingGame=null}else if(this.state.pendingGame.suspendLossLimit>0)if(this.state.pendingGame.betSize=this.state.pendingGame.betSize*this.state.pendingGame.progressionMultiplier,i){if(i){const{success:e}=await this.betSuspend(this.state.pendingGame.betSize,this.state.pendingGame.betStrategy,t);e&&this.logMessage("suspend limit reached, reset server state"),this.state.pendingGame=null}}else{const{success:e}=await this.betUpdate(this.state.pendingGame.betSize,t);e&&this.logMessage("updated bet size, updated server state"),this.state.pendingGame.progressionCount+=1}else if(this.state.pendingGame.stopLossLimit>0)if(this.state.pendingGame.betSize=this.state.pendingGame.betSize*this.state.pendingGame.progressionMultiplier,n){if(n){const{success:e}=await this.betReset("lose",this.state.pendingGame,t);e&&this.logMessage("registered loss, reset server state"),this.state.pendingGame=null,window.location.href=lostGameUrl}}else{const{success:e}=await this.betUpdate(this.state.pendingGame.betSize,t);e&&this.logMessage("updated bet size, updated server state"),this.state.pendingGame.progressionCount+=1}}this.state.gameStage=gameState.stageBet}}async submitBets(){let e=0;await this.driver.sleep(2e3),!this.config.dryRun&&await this.driver.setChipSize(this.config.chipSize);for(const t of this.state.pendingGame.bets){const s=Math.floor(this.state.pendingGame.betSize/this.config.chipSize);for(let a=0;a<s;a++)!this.config.dryRun&&await this.driver.setBet(t),e+=this.config.chipSize.valueOf(),this.logMessage(`click ${t} ${a+1}`)}this.logMessage(`bets: ${this.state.pendingGame.bets}`),this.logMessage(`total: ${e.toFixed(2)}`)}isPercentageMatching(e,t){const s=e[0],a=e[1],i=e[2],n=e[3],o=rouletteNumbers[s],r=t.slice(0,a);let l=0;r.forEach((e=>{o.includes(e)&&(l+=1)}));const c=Math.floor(l/r.length*100);switch(n){case"lowerEqual":return c<=i;case"equal":return c===i;case"higherEqual":return c>=i;default:return!1}}isPatternMatching(e,t){for(const s in e){const a=e[s],i=t[s];if(!this.getWinTypes(i).includes(a))return!1}return!0}setupGameState(e,t){this.state.pendingGame={bets:e.bets,betSize:t.betSize?t.betSize:this.config.chipSize.valueOf(),strategy:t.betStrategy,suspended:t.suspended,progressionCount:1,progressionMultiplier:e.progressionMultiplier,stopWinLimit:e.limits?.stopWin??0,stopLosslimit:e.limits?.stopLoss??0,suspendLossLimit:e.limits?.suspendLoss??0}}getWinTypes(e){const t=[];for(const s in rouletteNumbers)rouletteNumbers[s].includes(e)&&t.push(s);return t}logMessage(e){const t=["console-casino",this.state.gameStage,this.state.gameCount,e];t.toString()!==this.lastLogMessage&&(this.lastLogMessage=t.toString(),console.log(t.join(" - ")))}}class CommonBot{constructor(){this.running=!0,this.timeStarted=Math.floor(Date.now()/1e3)}async getDriver(e){switch(e){case"playtech":return new Playtech;default:throw new Error(`invalid driver name ${e}`)}}async getConfig(){return fetch(`${serverUrl}/config/`).then((e=>e.json())).catch((e=>console.error(e)))}}class RouletteBot extends CommonBot{async start(){const{config:e,strategies:t}=await this.getConfig(),s=await this.getDriver(e.driverName);for(;!s.getDealerMessage();)await s.sleep(1500);if(!e.dryRun&&e.minBalance>s.getBalance())throw new Error("balance too low");const a=new RouletteBetManager(s,e,t);for(a.logMessage(e.dryRun?"DEVELOPMENT":"PRODUCTION");this.running;)await a.start(),await s.sleep(1500)}async stop(){this.running=!1}}class DriverCommon{simulatedClick(e,t){const s=e.ownerDocument.createEvent("MouseEvents"),a=t||{},i={type:"click",canBubble:!0,cancelable:!0,view:e.ownerDocument.defaultView,detail:1,screenX:0,screenY:0,clientX:0,clientY:0,ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1,button:0,relatedTarget:null};for(const e in a)e in a&&(i[e]=a[e]);s.initMouseEvent(i.type,i.canBubble,i.cancelable,i.view,i.detail,i.screenX,i.screenY,i.clientX,i.clientY,i.ctrlKey,i.altKey,i.shiftKey,i.metaKey,i.button,i.relatedTarget),e.dispatchEvent(s)}sleep(e){return new Promise((t=>setTimeout(t,e)))}}class Playtech extends DriverCommon{constructor(){super(),this.selectors={chip:{.1:"chipsPanel.chip10",.2:"chipsPanel.chip20",.25:"chipsPanel.chip25",.5:"chipsPanel.chip50",1:"chipsPanel.chip100",5:"chipsPanel.chip500",10:"chipsPanel.chip1000",25:"chipsPanel.chip2500",100:"chipsPanel.chip10000",500:"chipsPanel.chip50000",1e3:"chipsPanel.chip100000"},roulette:{even:"betPlace.spots50x50-even",odd:"betPlace.spots50x50-odd",red:"betPlace.spots50x50-red",black:"betPlace.spots50x50-black",low:"betPlace.spots50x50-1to18",high:"betPlace.spots50x50-19to36",columnBottom:"betPlace.column-1",columnMiddle:"betPlace.column-2",columnTop:"betPlace.column-3",dozenFirst:"betPlace.dozen-1st12",dozenSecond:"betPlace.dozen-2nd12",dozenThird:"betPlace.dozen-3rd12"}}}getModalMessage(){return document.querySelector(".modal-confirm_desktop")?.textContent??""}getBalance(){const e=document.querySelector('[data-automation-locator="footer.balance"]')?.textContent??"";return parseFloat(e.match(/\d+(?:\.\d+)*/g)[0])}getBetAmount(){const e=document.querySelector('[data-automation-locator="footer.betAmount"]')?.textContent??"";return parseFloat(e.match(/\d+(?:\.\d+)*/g)[0])}getDealerMessage(){return document.querySelector(".dealer-message-text")?.textContent??""}getDealerName(){return document.querySelector('[data-automation-locator="field.dealerNickname"]')?.textContent??""}getNumberHistory(){try{const e=document.querySelector('[class^="roulette-history-extended__items"]');return[...e.querySelectorAll("[class^=roulette-history-item__value-text]")].map((e=>parseInt(e.textContent)))}catch{return this.toggleExtendedHistory(),this.getNumberHistory()}}getLastNumber(){const e=document.querySelector('[data-automation-locator="field.lastHistoryItem"]');return parseInt(e.textContent)}getLastNumbers(){return[...document.querySelector(".roulette-game-area__history-line").children[0].children].map((e=>parseInt(e.textContent)))}getTableName(){return(document.querySelector(".table-info__name")?.textContent??"").replace(/\s/g,"-").toLowerCase()}getWinAmount(){const e=document.querySelector('[data-automation-locator="footer.winAmount"]');return parseFloat(e.textContent.match(/[0-9]+(?:\.[0-9]+)*/g)[0])}setBet(e){this.simulatedClick(document.querySelector(`[data-automation-locator="${this.selectors.roulette[e]}"]`))}setBetDouble(){this.simulatedClick(document.querySelector('[data-automation-locator="button.Double"]'))}setBetUndo(){this.simulatedClick(document.querySelector('[data-automation-locator="button.Undo"]'))}setChipSize(e){this.simulatedClick(document.querySelector(`[data-automation-locator="${this.selectors.chip[e]}"]`))}toggleTableLimits(){this.simulatedClick(document.querySelector('[data-automation-locator="button.limits"]'))}toggleExtendedHistory(){this.simulatedClick(document.querySelector('[data-automation-locator="button.extenededHistory"]'))}toggleStatistics(){this.simulatedClick(document.querySelector('[data-automation-locator="button.statistic"]'))}toggleStatisticsChart(){this.simulatedClick(document.querySelector('[data-automation-locator="button.StatisticChart"]'))}}